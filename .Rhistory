<<<<<<< HEAD
plot(p)
# ggplot2::ggsave(paste(figurespath, 'Expression_Neutrophil_1subject_correVioplot.pdf', sep='/'))
#svg(paste(figurespath,'SuppFigs/Epivar_Monoexp_abchas.svg', sep='/'))
#png(paste(figurespath,'SuppFigs/Epivar_Monoexp_abchas.png', sep='/'))
plot(colMeans(mononetbbexpfeat), mononetbbexpchas, xlab="exp ab",
ylab='chas PP', axes=FALSE,   pch=20, main='Monocytes', col='red')
axis(1)
axis(2)
#dev.off()
#svg(paste(figurespath,'SuppFigs/Epivar_Neuexp_abchas.svg', sep='/'))
#png(paste(figurespath,'SuppFigs/Epivar_Neuexp_abchas.png', sep='/'))
plot(colMeans(neunetbbexpfeat), neunetbbexpchas, xlab="exp ab",
ylab='chas PP',  pch=20, col='blue', main='Neutrophils')
axis(1)
axis(2)
#dev.off()
#svg(paste(figurespath,'SuppFigs/Epivar_Tcellexp_abchas.svg', sep='/'))
#png(paste(figurespath,'SuppFigs/Epivar_Tcellexp_abchas.png', sep='/'))
plot(colMeans(tnetbbexpfeat), tnetbbexpchas, xlab="exp ab",
ylab='chas PP',   pch=20, col='darkgreen', main='Tcells')
axis(1)
axis(2)
#dev.off()
View(daf)
View(neunetexpbbcorr)
View(neunetbbexpfeat)
View(neunetbbexp)
View(neunetbbexpfeat)
###Neutrophils
rneuexp <- chaser::randomize(neunetbbexp, nrandom=nrand, preserve.nodes = NULL,dist.match = T)
rneuexp_chas <-lapply(rneuexp, chas)
rneuexp_feat=lapply(rneuexp, export)
mycols=rainbow(ncol(neunetbbexpfeat))
#svg(paste(figurespath,'Epivar_Neuexp_RandDist_abchas.svg', sep='/'))
plot(colMeans(rneuexp_feat[[1]]),rneuexp_chas[[1]], pch='.', ylim=c(0.02,0.13), xlim=c(2.9,3),col=mycols, xlab='Mean expression Neutrophils', ylab='ChAs on PP network')
for (i in 2:nrand){
points(colMeans(rneuexp_feat[[i]]),rneuexp_chas[[i]], pch='.',col=mycols)
}
points(colMeans(neunetbbexpfeat), neunetbbexpchas,  pch=20, col=mycols)
#dev.off()
##Monocytes
rmonoexp <- chaser::randomize(mononetbbexp, nrandom=nrand, preserve.nodes = NULL,dist.match = T)
rmonoexp_chas <-lapply(rmonoexp, chas)
rmonoexp_feat=lapply(rmonoexp, export)
mycols=rainbow(ncol(mononetbbexpfeat))
#svg(paste(figurespath,'SuppFigs/Epivar_exp_MonoRandDist_abchas.svg', sep='/'))
#png(paste(figurespath,'SuppFigs/Epivar_exp_MonoRandDist_abchas.png', sep='/'))
plot(colMeans(rmonoexp_feat[[1]]),rmonoexp_chas[[1]], pch='.', ylim=c(0.02,0.13),xlim=c(3.,3.2), col=mycols, xlab='Mean expression Monocytes', ylab='ChAs on PP network')
for (i in 2:nrand){
points(colMeans(rmonoexp_feat[[i]]),rmonoexp_chas[[i]], pch='.',col=mycols)
}
points(colMeans(mononetbbexpfeat), mononetbbexpchas,  pch=20, col=mycols)
#dev.off()
library(FactoMineR)
library(factoextra)
library(viper)
library(dplyr)
library(ggsignif)
load("~/DATA/Patients_data2.RData")
Do_cool_scatterplot <- function(Feature, title){
Feature <- dplyr::filter(Feature, Eigen_centrality > 0.0005 & Page_rank != 0 & ((P.Value < 0.05 & abs(logFC) > 1.5) | pval < 0.1))
DEG <- ifelse(Feature$logFC < 0, "DOWN", "UP")
ggplot(Feature, aes(x = log(Page_rank), y = log(Eigen_centrality), label = Gene, colour = DEG))+
geom_text(check_overlap = T, size = 2, nudge_x = 0.05, hjust = 0, outlier.size = 0)+
geom_point(size = 0.5)+
labs(title = paste0("Network-based node prioritization ", title))+
xlab("Page Rank (log)")+
ylab("Eigen Centrality (log)")+
scale_colour_manual(values=c("#0000FF", "#FF0000"))
}
Do_cool_scatterplot_Ver <- function(Feature, title){
Feature <- dplyr::filter(Feature, Eigen_centrality > 0.0005 & Page_rank != 0 & (P.Value < 0.05 | pval < 0.1))
DEG <- ifelse(Feature$logFC < 0, "DOWN", "UP")
ggplot(Feature, aes(x = log(Page_rank), y = log(Eigen_centrality), label = Gene, colour = DEG))+
geom_text(check_overlap = T, size = 2, nudge_x = 0.05, hjust = 0, outlier.size = 0)+
geom_point(size = 0.5)+
labs(title = paste0("Network-based node prioritization ", title))+
xlab("Page Rank (log)")+
ylab("Eigen Centrality (log)")+
scale_colour_manual(values=c("#0000FF", "#FF0000"))
}
RNAseq_diff_exp <- readRDS("~/GitHub/Koichi_gene_expression_analyses_git/Koichi_gene_expression_analyses/Results/Tables/RNAseq_diff_gene_expression_analysis.rds")
View(RNAseq_diff_exp)
View(RNAseq_diff_exp[["R_OR_NR_B"]][["NR.B-R.B"]])
library(ggplot2)
Diff_facs_analysis <- read.csv("Data/Diff_AGI.csv")
Rhod2_facs_analysis <- read.csv("Data/Rhod2_AGI.csv")
PpIX_facs_analysis <- read.csv("Data/PpIX_AGI_ALA_Basal.csv")
Scenith_analysis <- read.csv("Data/Scenith.csv")
Diff_facs_analysis_15_03 <- read.csv("Data/Diff_AGI_15_03.csv")
Diff_facs_analysis_15_03 <- read.csv("Data/Diff_AGI_15_03.csv", sep = "\t")
Diff_facs_analysis_04_05 <- read.csv("Data/Diff_AGI_04_05.csv", sep = "\t")
View(Diff_facs_analysis_15_03)
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15...APC, color = factor(Treatment, levels = c("DMSO", "AGI"))))
colnames(Diff_facs_analysis_15_03) <- c("Sample", "Cell.line", "Treatment", "GFP", "CD15_APC", "CD38_PC7", "Rhod2")
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI"))))
p
p <- p + ggplot2::geom_boxplot()
p
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI"))))
p <- p + ggplot2::geom_bar()
p
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI"))))
p <- p + ggplot2::geom_jitter()
p
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI"))))
p <- p + ggplot2::geom_jitter()
p <- p + ggplot2::labs(color = "Treatment", title = "CD15", x = "Cell lines")+
p
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI"))))
p <- p + ggplot2::geom_jitter()
p <- p + labs(color = "Treatment", title = "CD15", x = "Cell lines")+
p
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
ggplot2::geom_jitter() +
labs(color = "Treatment", title = "CD15", x = "Cell lines")+
p
p <- ggplot2::ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
ggplot::geom_jitter() +
ggplot::labs(color = "Treatment", title = "CD15", x = "Cell lines")+
p
library(ggplot2)
p <- ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
geom_jitter() +
labs(color = "Treatment", title = "CD15", x = "Cell lines")+
p
p <- ggplot(Diff_facs_analysis_15_03, aes(x = Cell.line, y = CD15_APC, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
geom_jitter() +
labs(color = "Treatment", title = "CD15", x = "Cell lines")
p
library(ggplot2)
library(dplyr)
Diff_facs_analysis <- read.csv("Data/Replicat 1/Diff_AGI.csv")
Rhod2_facs_analysis <- read.csv("Data/Replicat 1/Rhod2_AGI.csv")
PpIX_facs_analysis <- read.csv("Data/Replicat 1/PpIX_AGI_ALA_Basal.csv")
Scenith_analysis <- read.csv("Data/Replicat 1/Scenith.csv")
# -----------------------
Replicat2 <- read.csv("Data/Replicat 2/2021 12 14 - Rhod2 - M14R132, 56-11 AGI J+7.csv", nrows = 10, check.names = F, row.names = 1)[,-6]
Rhod2_df <- data.frame("Rhod2" = Replicat2$`Median Rhod2`[c(1:4)],
"Cell.line" = c(rep("56-11",2), rep("M14",2)),
"Treatment" = rep(c("AGI", "DMSO"), 2)) %>%
t() %>%
data.frame() %>%
rev() %>%
t() %>%
data.frame()
CD38_df <- data.frame("CD38" = Replicat2[c(1:4),"Median CD38"],
"Cell.line" = c(rep("56-11", 2), rep("M14", 2)),
"Treatment" = rep(c("AGI", "DMSO"), 2))
CD15_df <- data.frame("CD15" = Replicat2[c(1:4),"Median CD15"],
"Cell.line" = c(rep("56-11", 2), rep("M14", 2)),
"Treatment" = rep(c("AGI", "DMSO"), 2)
)
Scenith_replicat_2 <- data.frame("Cell.line" = c(rep("M14", 2), rep("56-11",2)),
"Mitochondrial_dependancy" = c(62.9, 16.0, 46.7, 40.8),
"Mitochondrial_signal" = c(199824.95, 251765.25, 557897, 450958.25),
"Treatment" = rep(c("DMSO", "AGI"), 2)
)
ggplot(data=Rhod2_facs_analysis, aes(x = Cell.line, y = Rhod2, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "Calcium indicator", x = "Cell lines")+
theme_minimal()
ggplot(data=Rhod2_df, aes(x = Cell.line, y = as.numeric(Rhod2), color = factor(Treatment, levels = c("DMSO", "AGI")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "Calcium indicator", x = "Cell lines")+
theme_minimal()
Rhod2_rep3 <- data.frame("Rhod2" = c(4084,3896, 1737, 2140),
"Cell.line" = c("56-11", "56-11", "Molm14", "Molm14"),
"Treatment" = c("DMSO", "AGI", "DMSO", "AGI"))
ggplot(data=Rhod2_rep3, aes(x=Cell.line, y=Rhod2, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "Calcium indicator", x = "Cell lines")+
theme_minimal()
ggplot(data=PpIX_facs_analysis, aes(x = Cell.line, y = MFI_PpIX, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "PpIX indicator", x = "Cell lines")+
theme_minimal()
ggplot(data=PpIX_facs_analysis, aes(x = Cell.line, y = ALA.basal, color = factor(Treatment, levels = c("DMSO", "AGI")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "PpIX ALA/basal", x = "Cell lines")+
theme_minimal()
ggplot(data=Scenith_analysis, aes(x=factor(Treatment, levels = c("DMSO", "AGI")), y=Gly_dependency, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "Glycolyse dependency", x = "Treatment")+
theme_minimal()
ggplot(data=Scenith_analysis, aes(x=factor(Treatment, levels = c("DMSO", "AGI")), y=Mito_dependency, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "Mitochondria dependency", x = "Treatment")+
theme_minimal()
ggplot(data=Scenith_replicat_2, aes(x=Cell.line, y=Mitochondrial_dependancy, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "Mitochondria dependency", x = "Treatment")+
theme_minimal()
ggplot(data=Diff_facs_analysis[c(1:4),], aes(x=Cell.line, y=CD11b_PE_A, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD11b", x = "Cell lines")+
theme_minimal()
ggplot(data=Diff_facs_analysis[c(1:4),], aes(x=Cell.line, y=CD14.APC__A700_A, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD14", x = "Cell lines")+
theme_minimal()
ggplot(data=Diff_facs_analysis[c(1:4),], aes(x=Cell.line, y=CD15_APC_A, color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD15", x = "Cell lines")+
theme_minimal()
ggplot(data=CD15_df, aes(x=Cell.line, y=as.numeric(CD15), color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD15", x = "Cell lines")+
theme_minimal()
CD15_rep3 <- data.frame("CD15" = c(4986,3977,1504,1558),
"Cell.line" = c("56-11", "56-11", "Molm14", "Molm14"),
"Treatment" = c("DMSO", "AGI", "DMSO", "AGI"))
ggplot(data=CD15_rep3, aes(x=Cell.line, y=as.numeric(CD15), color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD15", x = "Cell lines")+
theme_minimal()
CD38_df <- data.frame("CD38" = Replicat2[c(1:4),"Median CD38"],
"Cell.line" = c(rep("56-11", 2), rep("M14", 2)),
"Treatment" = rep(c("AGI", "DMSO"), 2)
)
ggplot(data=CD38_df[c(1:4),], aes(x=Cell.line, y=as.numeric(CD38), color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD38", x = "Cell lines")+
theme_minimal()
CD38_rep2 <- data.frame("CD38" = c(887, 853, 6233,7747),
"Cell.line" = c("56-11", "56-11", "Molm14", "Molm14"),
"Treatment" = c("DMSO", "AGI", "DMSO", "AGI"))
ggplot(data=CD38_rep2, aes(x=Cell.line, y=as.numeric(CD38), color=factor(Treatment, levels = c("DMSO", "AGI"))))+
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("DMSO", "AGI")) +
geom_bar(stat = "identity", fill = "white", position = position_dodge()) +
labs(color = "Treatment", title = "CD38", x = "Cell lines")+
theme_minimal()
library(ggplot2)
library(dplyr)
Diff_facs_analysis_replicat_1 <- read.csv("Data/Replicat 1/Diff_AGI.csv")
Rhod2_facs_analysis_replicat_1 <- read.csv("Data/Replicat 1/Rhod2_AGI.csv")
PpIX_facs_analysis_replicat_1 <- read.csv("Data/Replicat 1/PpIX_AGI_ALA_Basal.csv")
Scenith_analysis_replicat_1 <- read.csv("Data/Replicat 1/Scenith.csv")
Replicat2 <- read.csv("Data/Replicat 2/2021 12 14 - Rhod2 - M14R132, 56-11 AGI J+7.csv", nrows = 10, check.names = F, row.names = 1)[,-6]
Rhod2_df <- data.frame("Rhod2" = Replicat2$`Median Rhod2`[c(1:4)],
"Cell.line" = c(rep("56-11",2), rep("M14",2)),
"Treatment" = rep(c("AGI", "DMSO"), 2)) %>%
t() %>%
data.frame() %>%
rev() %>%
t() %>%
data.frame()
CD38_df <- data.frame("CD38" = Replicat2[c(1:4),"Median CD38"],
"Cell.line" = c(rep("56-11", 2), rep("M14", 2)),
"Treatment" = rep(c("AGI", "DMSO"), 2))
CD15_df <- data.frame("CD15" = Replicat2[c(1:4),"Median CD15"],
"Cell.line" = c(rep("56-11", 2), rep("M14", 2)),
"Treatment" = rep(c("AGI", "DMSO"), 2)
)
Scenith_replicat_2 <- data.frame("Cell.line" = c(rep("M14", 2), rep("56-11",2)),
"Mitochondrial_dependancy" = c(62.9, 16.0, 46.7, 40.8),
"Mitochondrial_signal" = c(199824.95, 251765.25, 557897, 450958.25),
"Treatment" = rep(c("DMSO", "AGI"), 2)
)
Rhod2_total_df <- data.frame(Rhod2 = as.numeric(c(Rhod2_facs_analysis_replicat_1$Rhod2, as.numeric(Replicat2$`Median Rhod2`[c(1:4)]), 4084,3896, 1737, 2140)),
Cell_line = c(rep("Molm14" ,2), rep("HL60", 4), rep("Molm14", 2), rep("HL60", 2), rep("Molm14", 2)),
Treatment = c(rep(c("Control", "IDHi"), 2), rep(c("IDHi", "Control"), 2), rep(c("Control", "IDHi"), 2))
)
Scenith_total_df <- data.frame(Mito_dep = c(Scenith_analysis_replicat_1$Mito_dependency, Scenith_replicat_2$Mitochondrial_dependancy),
Cell_line = c(rep("Molm14", 4), rep("HL60", 2)),
Treatment = rep(c("Control", "IDHi"))
)
Diff_facs_analysis_replicat_1 <- Diff_facs_analysis_replicat_1[c(1:4),]
Diff_facs_analysis_replicat_1$Cell.line <- c(rep("Molm14", 2), rep("HL60", 2))
Diff_facs_analysis_replicat_1$Treatment <- rep(c("Control", "IDHi"),2)
cd15 <- data.frame(cd15 = as.numeric(c(Diff_facs_analysis_replicat_1$CD15_APC_A, CD15_df$CD15, 4986,3977,1504,1558)),
Cell_line = c(Diff_facs_analysis_replicat_1$Cell.line, rep(c(rep("HL60", 2), rep("Molm14", 2)), 2)),
Treatment = c(Diff_facs_analysis_replicat_1$Treatment, rep(c("IDHi", "Control"), 2), rep(c("Control", "IDHi"), 2))
)
cd38 <- data.frame(cd38 = as.numeric(c(Replicat2[c(1:4),4], 887, 853, 6233,7747)),
Cell_line = rep(c(rep("HL60", 2), rep("Molm14", 2)), 2),
Treatment = c(rep(c("IDHi", "Control"),2), rep(c("Control", "IDHi"),2))
)
ggplot(data=Rhod2_total_df, aes(x = Cell_line, y = Rhod2, color = factor(Treatment, levels = c("Control", "IDHi")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("Control", "IDHi")) +
geom_boxplot(width = 0.3) +
geom_jitter(position = position_jitterdodge()) +
labs(color = "Treatment", title = "Rhod2", x = "Cell lines", y ="")+
theme_minimal()
ggplot(data=Scenith_total_df, aes(x = Cell_line, y = Mito_dep, color = factor(Treatment, levels = c("Control", "IDHi")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("Control", "IDHi")) +
geom_boxplot(width = 0.3) +
geom_jitter(position = position_jitterdodge()) +
labs(color = "Treatment", title = "Mitochondrial dependency", x = "Cell lines", y = "% Dependancy")+
theme_minimal()
ggplot(data=Diff_facs_analysis_replicat_1, aes(x = Cell.line, y = CD11b_PE_A, color = factor(Treatment, levels = c("Control", "IDHi")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("Control", "IDHi")) +
geom_jitter(position = position_jitterdodge()) +
labs(color = "Treatment", title = "CD11b", x = "Cell lines", y = "")+
theme_minimal()
ggplot(data=cd15, aes(x = Cell_line, y = cd15, color = factor(Treatment, levels = c("Control", "IDHi")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("Control", "IDHi")) +
geom_boxplot(width = 0.3) +
geom_jitter(position = position_jitterdodge(dodge.width = 0.5)) +
labs(color = "Treatment", title = "CD15", x = "Cell lines", y = "")+
theme_minimal()
ggplot(data=Diff_facs_analysis_replicat_1, aes(x = Cell.line, y = CD14.APC__A700_A, color = factor(Treatment, levels = c("Control", "IDHi")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("Control", "IDHi")) +
geom_jitter(position = position_jitterdodge()) +
labs(color = "Treatment", title = "CD14", x = "Cell lines", y = "")+
theme_minimal()
ggplot(data=cd38, aes(x = Cell_line, y = cd38, color = factor(Treatment, levels = c("Control", "IDHi")))) +
scale_color_manual(values=c("#0000FF", "#FF0000"), limits=c("Control", "IDHi")) +
geom_boxplot(width = 0.3) +
geom_jitter(position = position_jitterdodge(dodge.width = 0.5)) +
labs(color = "Treatment", title = "CD38", x = "Cell lines", y = "")+
theme_minimal()
View(cd38)
load("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/05.05.RData")
load("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/05.05.RData")
load("/home/alexis/DATA/Koichi_analysis.RData")
GSE153348_IDH_RNA_Seq_matrix_submission <- read.delim("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/DATA/GSE153348_IDH_RNA_Seq_matrix_submission.txt")
View(GSE153348_IDH_RNA_Seq_matrix_submission)
RNAseq <- read.csv("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/DATA/GSE153348_IDH_RNA_Seq_matrix_submission.txt", sep = "\t", check.names = F)
View(RNAseq)
RNAseq$Gene <- rownames(RNAseq) %>% str_split(., "[|]") %>% lapply(., function(x){
x[1]
}) %>%
unlist(.)
library(dplyr)
RNAseq$Gene <- rownames(RNAseq) %>% str_split(., "[|]") %>% lapply(., function(x){
x[1]
}) %>%
unlist(.)
library(stringr)
RNAseq$Gene <- rownames(RNAseq) %>% str_split(., "[|]") %>% lapply(., function(x){
x[1]
}) %>%
unlist(.)
RNAseq <- RNAseq %>%
split(., .$Gene) %>%
lapply(., function(x){
l <- length(x[1,]) - 1
cnames <- colnames(x)[c(1:l)]
df <- x[,c(1:l)] %>%
as.matrix(.) %>%
colSums2(.) %>%
data.frame(.) %>%
t(.) %>%
data.frame(.)
colnames(df) <- cnames
df
}) %>%
rbindlist(.) %>%
data.frame(.)
library(data.table)
RNAseq <- RNAseq %>%
split(., .$Gene) %>%
lapply(., function(x){
l <- length(x[1,]) - 1
cnames <- colnames(x)[c(1:l)]
df <- x[,c(1:l)] %>%
as.matrix(.) %>%
colSums2(.) %>%
data.frame(.) %>%
t(.) %>%
data.frame(.)
colnames(df) <- cnames
df
}) %>%
rbindlist(.) %>%
data.frame(.)
library(matrixStats)
RNAseq <- RNAseq %>%
split(., .$Gene) %>%
lapply(., function(x){
l <- length(x[1,]) - 1
cnames <- colnames(x)[c(1:l)]
df <- x[,c(1:l)] %>%
as.matrix(.) %>%
colSums2(.) %>%
data.frame(.) %>%
t(.) %>%
data.frame(.)
colnames(df) <- cnames
df
}) %>%
rbindlist(.) %>%
data.frame(.)
View(RNAseq)
RNAseq <- RNAseq %>%
split(., .$Gene) %>%
lapply(., function(x){
l <- length(x[1,]) - 1
cnames <- colnames(x)[c(1:l)]
df <- x[,c(1:l)] %>%
as.matrix(.) %>%
colSums2(.) %>%
data.frame(.) %>%
t(.) %>%
data.frame(.)
colnames(df) <- cnames
df
}) %>%
rbindlist(.) %>%
data.frame(., check.names = F)
RNAseq <- read.csv("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/DATA/GSE153348_IDH_RNA_Seq_matrix_submission.txt", sep = "\t", check.names = F)
RNAseq$Gene <- rownames(RNAseq) %>% str_split(., "[|]") %>% lapply(., function(x){
x[1]
}) %>%
unlist(.)
RNAseq <- RNAseq %>%
split(., .$Gene) %>%
lapply(., function(x){
l <- length(x[1,]) - 1
cnames <- colnames(x)[c(1:l)]
df <- x[,c(1:l)] %>%
as.matrix(.) %>%
colSums2(.) %>%
data.frame(.) %>%
t(.) %>%
data.frame(.)
colnames(df) <- cnames
df
}) %>%
rbindlist(.) %>%
data.frame(., check.names = F)
View(RNAseq)
View(RNAseq)
RNAseq <- read.csv("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/DATA/GSE153348_IDH_RNA_Seq_matrix_submission.txt", sep = "\t", check.names = F)
gene_rownames <- rownames(RNAseq) %>% str_split(., "[|]") %>% lapply(., function(x){
x[1]
}) %>%
unlist(.) %>%
unique(.)
RNAseq$Gene <- rownames(RNAseq) %>% str_split(., "[|]") %>% lapply(., function(x){
x[1]
}) %>%
unlist(.)
RNAseq <- RNAseq %>%
split(., .$Gene) %>%
lapply(., function(x){
l <- length(x[1,]) - 1
cnames <- colnames(x)[c(1:l)]
df <- x[,c(1:l)] %>%
as.matrix(.) %>%
colSums2(.) %>%
data.frame(.) %>%
t(.) %>%
data.frame(.)
colnames(df) <- cnames
df
}) %>%
rbindlist(.) %>%
data.frame(., check.names = F)
rownames(RNAseq) <- gene_rownames
View(RNAseq)
View(RNAseq)
RNAseq_CPM <- convertCounts(RNAseq,
unit = "CPM",
log = FALSE,
normalize = "none")
install.packages("DGEobj.utils")
library(DGEobj.utils)
RNAseq_CPM <- convertCounts(RNAseq,
unit = "CPM",
log = FALSE,
normalize = "none")
RNAseq_CPM <- convertCounts(as.matrix(RNAseq),
unit = "CPM",
log = FALSE,
normalize = "none")
View(RNAseq_CPM)
write.csv(RNAseq_CPM, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/DATA/RNAseq_mIDHi_cohort_CPM.csv")
load("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/05.05.RData")
load("~/27.04.RData")
library(RCy3)
load("~/09.05.2022.RData")
View(Transcriptomes)
suppressPackageStartupMessages({
library(hugene20sttranscriptcluster.db)
library(oligo)
library(data.table)
})
suppressPackageStartupMessages({
library(dplyr)
library(chaser)
library(stringr)
library(biomaRt)
library(gridExtra)
library(grid)
library(ggplot2)
})
setwd("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/")
source("~/Core_scripts/core_functions.R")
source("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/Make_koichi_factor.R")
RNAseq_1 <- read.csv("~/GitHub/Koichi_gene_expression_analyses_git/Koichi_gene_expression_analyses/DATA/RNAseq_parsed.csv", row.names = 1, header = T, check.names = F)
Factor_R_OR_NR_B
length(Factor_R_OR_NR_B)
colnames(RNAseq_1)[Factor_R_OR_NR_B == "NR.B"]
colnames(RNAseq_1)[Factor_R_OR_NR_B == "R.B"]
colnames(RNAseq_1)[Factor_R_OR_NR_B == "R.REL"]
colnames(RNAseq_1)[Factor_R_OR_NR_B == "OR.REL"]
=======
pheatmap::pheatmap(corr)
Differential_analysis <- function(Focused_variable, DATA){
design.pairs <- function(levels) {
n <- length(levels)
design <- matrix(0,n,choose(n,2))
rownames(design) <- levels
colnames(design) <- 1:choose(n,2)
k <- 0
for (i in 1:(n - 1))
for (j in (i + 1):n) {
k <- k + 1
design[i,k] <- 1
design[j,k] <- -1
colnames(design)[k] <- paste(levels[i], "-", levels[j],sep = "")
}
design
}
design <- model.matrix(~0 + Focused_variable)
contr.matrix <- design.pairs(levels(factor(Focused_variable)))
colnames(design) <- rownames(contr.matrix)
Fit <- lmFit(DATA, design) %>%
contrasts.fit(., contr.matrix) %>%
eBayes(., trend = TRUE)
FitList <- list()
for (i in 1:ncol(contr.matrix)) {
FitList[[i]] <- topTable(Fit, coef = i, adjust.method = "BH", number = nrow(DATA)) %>%
mutate(ID = rownames(.))
message(paste0(i, " done"))
}
names(FitList) <- colnames(contr.matrix)
return(FitList)
}
Batched_DEGs_phenocomb <- Differential_analysis(pheno_comb, Batched_GE)
Batched_DEGs_shPTBP1 <- Differential_analysis(pheno2, Batched_GE)$`CNT-shPTBP1`
DEGs_phenocomb <- Differential_analysis(pheno_comb, Gene_exp_voomed)
DEGs_shPTBP1 <- Differential_analysis(pheno2, Gene_exp_voomed)$`CNT-shPTBP1`
names(Batched_DEGs_phenocomb)
Analyses_of_Interest <- c("Molm.CNT-Molm.shPTBP1", "MV4_11.CNT-MV4_11.shPTBP1", "OCI.CNT-OCI.shPTBP1", "U937.CNT-U937.shPTBP1")
sapply(Analyses_of_Interest, function(ana){
write.csv(Batched_DEGs_phenocomb[[ana]], paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Batched_analysis_", ana, ".csv"))
write.csv(DEGs_phenocomb[[ana]], paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/", ana, ".csv"))
dplyr::filter(Batched_DEGs_phenocomb[[ana]], abs(logFC) > 1.5 & P.Value < 0.05) %>%
write.csv(., paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder/Batched_analysis_", ana, ".csv"))
dplyr::filter(DEGs_phenocomb[[ana]], abs(logFC) > 1.5 & P.Value < 0.05) %>%
write.csv(., paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder/", ana, ".csv"))
})
write.csv(Batched_DEGs_shPTBP1, paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Batched_shCNT_vs_shPTBP1.csv"))
dplyr::filter(Batched_DEGs_shPTBP1, abs(logFC) > 1.5 & P.Value < 0.05) %>%
write.csv(., paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder/Batched_shCNT_vs_shPTBP1.csv"))
write.csv(DEGs_shPTBP1, paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/shCNT_vs_shPTBP1.csv"))
dplyr::filter(DEGs_shPTBP1, abs(logFC) > 1.5 & P.Value < 0.05) %>%
write.csv(., paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder/shCNT_vs_shPTBP1.csv"))
suppressPackageStartupMessages({
library(EnhancedVolcano)
library(gridExtra)
library(grid)
})
volcanos_batched <- lapply(Analyses_of_Interest, function(ana){
EnhancedVolcano(
toptable = Batched_DEGs_phenocomb[[ana]],
lab = Batched_DEGs_phenocomb[[ana]]$ID,
x = "logFC",
y = "P.Value",
FCcutoff = 01.5,
pCutoff = 0.05,
title = ana,
subtitle = NA,
subtitleLabSize = 0
)
})
volcanos <- lapply(Analyses_of_Interest, function(ana){
EnhancedVolcano(
toptable = DEGs_phenocomb[[ana]],
lab = DEGs_phenocomb[[ana]]$ID,
x = "logFC",
y = "P.Value",
FCcutoff = 1.5,
pCutoff = 0.05,
title = ana,
subtitle = NA,
subtitleLabSize = 0
)
})
shCNT_shPTBP1_volc <- EnhancedVolcano(
toptable = DEGs_shPTBP1,
lab = DEGs_shPTBP1$ID,
x = "logFC",
y = "P.Value",
FCcutoff = 1.5,
pCutoff = 0.05,
title = "shCNT_shPTBP1_volc",
subtitle = NA,
subtitleLabSize = 0
)
shCNT_shPTBP1_volc_batched <- EnhancedVolcano(
toptable = Batched_DEGs_shPTBP1,
lab = Batched_DEGs_shPTBP1$ID,
x = "logFC",
y = "P.Value",
FCcutoff = 1.5,
pCutoff = 0.05,
title = "shCNT - shPTBP1",
subtitle = NA,
subtitleLabSize = 0
)
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Volcanos.png"), width = 1920, height = 1080)
grid.arrange(volcanos[[1]], volcanos[[2]], volcanos[[3]], volcanos[[4]], shCNT_shPTBP1_volc,
ncol=3,
top = textGrob('shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Volcanos_batched.png"), width = 1920, height = 1080)
grid.arrange(volcanos_batched[[1]], volcanos_batched[[2]], volcanos_batched[[3]], volcanos_batched[[4]], shCNT_shPTBP1_volc_batched,
ncol=3,
top = textGrob('Batched shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
suppressPackageStartupMessages({
library(clusterProfiler)
})
enrich_analysis <- lapply(Analyses_of_Interest, function(ana){
deg <- dplyr::filter(DEGs_phenocomb[[ana]], logFC < -1.5 & P.Value < 0.05)
enrichGO(
gene = deg$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
})
names(enrich_analysis) <- Analyses_of_Interest
dot <- lapply(Analyses_of_Interest, function(enrich){
dotplot(enrich_analysis[[enrich]], showCategory = 25 ) + ggtitle(paste0(enrich, " GO terms, Gene up-regulated"))
})
deg <- dplyr::filter(DEGs_shPTBP1, logFC < -1.5 & P.Value < 0.05)
shCNT_shPTBP1_dot <- enrichGO(
gene = deg$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
shCNT_shPTBP1_dot <- dotplot(shCNT_shPTBP1_dot, showCategory = 25 ) + ggtitle("shPTBP1 GO terms, Gene up-regulated")
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/GO.png"), width = 1920, height = 1080)
grid.arrange(dot[[1]], dot[[2]], dot[[3]], dot[[4]], shCNT_shPTBP1_dot,
ncol=3,
top = textGrob('shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
enrich_analysis_batched <- lapply(Analyses_of_Interest, function(ana){
deg <- dplyr::filter(Batched_DEGs_phenocomb[[ana]], logFC < -1.5 & P.Value < 0.05)
enrichGO(
gene = deg$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
})
names(enrich_analysis_batched) <- Analyses_of_Interest
dot_batched <- lapply(Analyses_of_Interest, function(enrich){
dotplot(enrich_analysis_batched[[enrich]], showCategory = 25 ) + ggtitle(paste0(enrich, " GO terms, Gene up-regulated"))
})
deg_batched <- dplyr::filter(Batched_DEGs_shPTBP1, logFC < -1.5 & P.Value < 0.05)
shCNT_shPTBP1_dot_batched <- enrichGO(
gene = deg_batched$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
shCNT_shPTBP1_dot_batched <- dotplot(shCNT_shPTBP1_dot_batched, showCategory = 25 ) + ggtitle("shPTBP1 GO terms, Gene up-regulated")
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/GO_batched.png"), width = 1920, height = 1080)
grid.arrange(dot_batched[[1]], dot_batched[[2]], dot_batched[[4]], shCNT_shPTBP1_dot_batched,
ncol=3,
top = textGrob('Batched shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
down_enrich_analysis <- lapply(Analyses_of_Interest, function(ana){
deg <- dplyr::filter(DEGs_phenocomb[[ana]], logFC > 1.5 & P.Value < 0.05)
enrichGO(
gene = deg$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
})
names(down_enrich_analysis) <- Analyses_of_Interest
dot_down <- lapply(Analyses_of_Interest, function(enrich){
dotplot(down_enrich_analysis[[enrich]], showCategory = 25 ) + ggtitle(paste0(enrich, " GO terms, Gene down-regulated"))
})
deg_down <- dplyr::filter(DEGs_shPTBP1, logFC > 1.5 & P.Value < 0.05)
shCNT_shPTBP1_dot_down <- enrichGO(
gene = deg_down$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
shCNT_shPTBP1_dot_down <- dotplot(shCNT_shPTBP1_dot_down, showCategory = 25 ) + ggtitle("shPTBP1 GO terms, Gene down-regulated")
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/GO_down.png"), width = 1920, height = 1080)
grid.arrange(dot_down[[1]], dot_down[[2]], dot_down[[3]], dot_down[[4]], shCNT_shPTBP1_dot_down,
ncol=3,
top = textGrob('shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
enrich_analysis_batched_down <- lapply(Analyses_of_Interest, function(ana){
deg <- dplyr::filter(Batched_DEGs_phenocomb[[ana]], logFC > 1.5 & P.Value < 0.05)
enrichGO(
gene = deg$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
})
names(enrich_analysis_batched_down) <- Analyses_of_Interest
dot_batched_down <- lapply(Analyses_of_Interest, function(enrich){
dotplot(enrich_analysis_batched_down[[enrich]], showCategory = 25 ) + ggtitle(paste0(enrich, " GO terms, Gene down-regulated"))
})
deg_batched_down <- dplyr::filter(Batched_DEGs_shPTBP1, logFC > 1.5 & P.Value < 0.05)
shCNT_shPTBP1_dot_batched_down <- enrichGO(
gene = deg_batched_down$ID,
keyType = "SYMBOL",
OrgDb = "org.Hs.eg.db",
ont = "ALL",
pAdjustMethod = "none"
)
shCNT_shPTBP1_dot_batched_down <- dotplot(shCNT_shPTBP1_dot_batched_down, showCategory = 25 ) + ggtitle("shPTBP1 GO terms, Gene down-regulated")
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/GO_batched_down.png"), width = 1920, height = 1080)
grid.arrange(dot_batched_down[[1]], dot_batched_down[[2]], dot_batched_down[[4]], shCNT_shPTBP1_dot_batched_down,
ncol=3,
top = textGrob('Batched shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
grid.arrange(volcanos[[1]], volcanos[[2]], volcanos[[3]], volcanos[[4]], shCNT_shPTBP1_volc,
ncol=3,
top = textGrob('shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
grid.arrange(volcanos_batched[[1]], volcanos_batched[[2]], volcanos_batched[[3]], volcanos_batched[[4]], shCNT_shPTBP1_volc_batched,
ncol=3,
top = textGrob('Batched shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
grid.arrange(dot[[1]], dot[[2]], dot[[3]], dot[[4]], shCNT_shPTBP1_dot,
ncol=3,
top = textGrob('shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
grid.arrange(dot_batched[[1]], dot_batched[[2]], dot_batched[[4]], shCNT_shPTBP1_dot_batched,
ncol=3,
top = textGrob('Batched shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
grid.arrange(dot_down[[1]], dot_down[[2]], dot_down[[3]], dot_down[[4]], shCNT_shPTBP1_dot_down,
ncol=3,
top = textGrob('shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
grid.arrange(dot_batched_down[[1]], dot_batched_down[[2]], dot_batched_down[[4]], shCNT_shPTBP1_dot_batched_down,
ncol=3,
top = textGrob('Batched shCNT vs shPTBP1',
just = c('center'),
gp = gpar(fontsize = 32)))
BEATAML_count <- read.csv("DATA/BEATAML_count.csv", check.names = F, row.names = 1)
BEATAML_count <- read.csv("DATA/BEATAML_count.csv", check.names = F, row.names = 1)
BEATAML_normalized <- voom(BEATAML_count[-c(60484:60488),], plot = T)$E
library(limma)
BEATAML_normalized <- voom(BEATAML_count[-c(60484:60488),], plot = T)$E
View(BEATAML_normalized)
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm_batched <- read.csv("Molm.CNT-Molm.shPTBP1.csv")
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm_batched <- read.csv("Molm.CNT-Molm.shPTBP1.csv")
# PTBP1_signature
Molm_batched <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1)
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm_batched <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1)
# PTBP1_signature
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1)
MV4_11 <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1)
U937 <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1)
OCI <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1)
Molm_batched <- read.csv("Batched_Molm.CNT-Molm.shPTBP1.csv", row.names = 1)
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1)
MV4_11 <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1)
U937 <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1)
OCI <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1)
Molm_batched <- read.csv("Batched_analysis_Molm.CNT-Molm.shPTBP1.csv", row.names = 1)
MV4_11_batched <- read.csv("Batched_analysis_MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1)
U937_batched <- read.csv("Batched_analysis_U937.CNT-U937.shPTBP1.csv", row.names = 1)
OCI_batched <- read.csv("Batched_analysis_OCI.CNT-OCI.shPTBP1.csv", row.names = 1)
# PTBP1_signature
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5)$ID
suppressPackageStartupMessages({
library(dplyr)
library(limma)
library(FactoMineR)
library(factoextra)
library(sva)
library(limma)
})
suppressPackageStartupMessages({
library(dplyr)
library(limma)
library(FactoMineR)
library(factoextra)
library(sva)
library(limma)
})
BEATAML_count <- read.csv("DATA/BEATAML_count.csv", check.names = F, row.names = 1)
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5)$ID
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
MV4_11 <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
U937 <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
OCI <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
Molm_batched <- read.csv("Batched_analysis_Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
MV4_11_batched <- read.csv("Batched_analysis_MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
U937_batched <- read.csv("Batched_analysis_U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
OCI_batched <- read.csv("Batched_analysis_OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
MV4_11 <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
U937 <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
OCI <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
Molm_batched <- read.csv("Batched_analysis_Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
MV4_11_batched <- read.csv("Batched_analysis_MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
U937_batched <- read.csv("Batched_analysis_U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
OCI_batched <- read.csv("Batched_analysis_OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
PTBP1_signature <- intersect(Molm, MV4_11) %>% intersect(., U937) %>% intersect(., OCI)
PTBP1_signature_batched <- intersect(Molm_batched, MV4_11_batched) %>% intersect(., U937_batched) %>% intersect(., OCI_batched)
shCNT_shPTBP1 <- read.csv("Batched_shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
MV4_11 <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
U937 <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
OCI <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
shCNT_shPTBP1 <- read.csv("shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
Molm_batched <- read.csv("Batched_analysis_Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
MV4_11_batched <- read.csv("Batched_analysis_MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
U937_batched <- read.csv("Batched_analysis_U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
OCI_batched <- read.csv("Batched_analysis_OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
shCNT_shPTBP1_batched <- read.csv("Batched_shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC < -1.5) %>% .$ID
PTBP1_signature <- intersect(Molm, MV4_11) %>% intersect(., U937) %>% intersect(., OCI)
PTBP1_signature_batched <- intersect(Molm_batched, MV4_11_batched) %>% intersect(., U937_batched) %>% intersect(., OCI_batched)
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm_down <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
MV4_11_down <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
U937_down <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
OCI_down <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
shCNT_shPTBP1_down <- read.csv("shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
Molm_batched_down <- read.csv("Batched_analysis_Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
MV4_11_batched_down <- read.csv("Batched_analysis_MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
U937_batched_down <- read.csv("Batched_analysis_U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
OCI_batched_down <- read.csv("Batched_analysis_OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
shCNT_shPTBP1_batched_down <- read.csv("Batched_shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
PTBP1_signature_down <- intersect(Molm_down, MV4_11_down) %>% intersect(., U937_down) %>% intersect(., OCI_down)
PTBP1_signature_batched_down <- intersect(Molm_batched_down, MV4_11_batched_down) %>% intersect(., U937_batched_down) %>% intersect(., OCI_batched_down)
PTBP1_signature_down
PTBP1_all_up <- c(Molm_down, MV4_11_down, U937_down, OCI_down) %>% unique()
write.csv(PTBP1_all_up, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_408.csv")
write.csv(PTBP1_all_up, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_408.csv", row.names = F, col.names = F)
write.csv(PTBP1_all_up, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_408.csv", row.names = F, col.names = NA)
PTBP1_all_up_batched <- c(Molm_batched_down, MV4_11_batched_down, U937_batched_down, OCI_batched_down) %>% unique()
write.csv(PTBP1_all_up_batched, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_408_batched.csv", row.names = F)
write.csv(PTBP1_all_up_batched, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_239_batched.csv", row.names = F)
setwd("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/Filtered_folder")
Molm_down <- read.csv("Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
MV4_11_down <- read.csv("MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
U937_down <- read.csv("U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
OCI_down <- read.csv("OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
shCNT_shPTBP1_down <- read.csv("shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
Molm_batched_down <- read.csv("Batched_analysis_Molm.CNT-Molm.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
MV4_11_batched_down <- read.csv("Batched_analysis_MV4_11.CNT-MV4_11.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
U937_batched_down <- read.csv("Batched_analysis_U937.CNT-U937.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
OCI_batched_down <- read.csv("Batched_analysis_OCI.CNT-OCI.shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
shCNT_shPTBP1_batched_down <- read.csv("Batched_shCNT_vs_shPTBP1.csv", row.names = 1) %>% dplyr::filter(logFC > 1.5) %>% .$ID
PTBP1_signature_down <- intersect(Molm_down, MV4_11_down) %>% intersect(., U937_down) %>% intersect(., OCI_down)
PTBP1_signature_batched_down <- intersect(Molm_batched_down, MV4_11_batched_down) %>% intersect(., U937_batched_down) %>% intersect(., OCI_batched_down)
PTBP1_all_up <- c(Molm_down, MV4_11_down, U937_down, OCI_down) %>% unique()
write.csv(PTBP1_all_up, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_239.csv", row.names = F)
PTBP1_all_up_batched <- c(Molm_batched_down, MV4_11_batched_down, U937_batched_down, OCI_batched_down) %>% unique()
write.csv(PTBP1_all_up_batched, "/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/PTBP1_DEGs/PTBP1_all_239_batched.csv", row.names = F)
intersect(PTBP1_all_up, PTBP1_all_up_batched)
BiocManager::install("GeneAnswers")
install.packages("GeneAnswers")
vignette <- readRDS("/home/alexis/GeneAnswers_2.36.0/GeneAnswers/build/vignette.rds")
install.packages("~/GeneAnswers_2.36.0.tar.gz", repos = NULL, type = "source")
library(GeneAnswers)
load("~/splicing_pca.RData")
suppressPackageStartupMessages({
library(dplyr)
library(FactoMineR)
library(factoextra)
library(sva)
library(tidyverse)
})
suppressPackageStartupMessages({
library(gridExtra)
library(grid)
})
data_merged_Inc_3 <- readRDS("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/splicing_Rdata_INC.rds")
pcas_INC <- lapply(data_merged_Inc_3, function(ev){
prcomp(t(ev))
})
pheno_INC <- pheno[c(1,3,5,7,9,11,13,15,17,19,21,23)]
p <- lapply(pcas_INC, function(res.pca){
fviz_pca_ind(res.pca, label="none", habillage=pheno_INC,
addEllipses=TRUE, ellipse.level=0.95, )
})
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/pcas_INC.png"), width = 1920, height = 1080)
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]], p[[5]],
ncol=3,
top = textGrob('splicing INC pca',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
save.image("~/splicing_pca.RData")
p <- lapply(names(pcas_INC), function(res.pca){
fviz_pca_ind(pcas_INC[[res.pca]], label=res.pca, habillage=pheno_INC,
addEllipses=TRUE, ellipse.level=0.95)
})
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/pcas_INC.png"), width = 1920, height = 1080)
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]], p[[5]],
ncol=3,
top = textGrob('splicing INC pca',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
p <- lapply(names(pcas_INC), function(res.pca){
fviz_pca_ind(pcas_INC[[res.pca]], label="none", habillage=pheno_INC, title = res.pca,
addEllipses=TRUE, ellipse.level=0.95)
})
png(file = paste0("/mnt/SERVER-CRCT-STORAGE/CRCT18/UTILISATEURS/Alexis/pcas_INC.png"), width = 1920, height = 1080)
grid.arrange(p[[1]], p[[2]], p[[3]], p[[4]], p[[5]],
ncol=3,
top = textGrob('splicing INC pca',
just = c('center'),
gp = gpar(fontsize = 32)))
dev.off()
View(data_merged_Inc_3)
View(data_merged_Inc_3[["A5SS.MATS.JCEC.txt"]])
source("~/GitHub/Multiplex_DNAmet_PPI_Chrom_Coexp/Compare_networks.R")
install.packages("~/GeneAnswers_2.36.0.tar.gz", repos = NULL, type = "source")
BiocManager::install("Heatplus")
install.packages("~/GeneAnswers_2.36.0.tar.gz", repos = NULL, type = "source")
library(GeneAnswers)
library(org.Hs.eg.db)
data(regulonlaml)
viper_regulons2dorothea <- function(r) {
res <- r %>%
purrr::map_df(
.f = function(i) {
tf_target <- i$tfmode %>%
tibble::enframe(name = "target", value = "mor") %>%
mutate(likelihood = i$likelihood)
},
.id = "tf"
)
return(res)
}
regulonaml <- viper_regulons2dorothea(regulonlaml)
regulonaml_SYMBOL <- data.frame("source" = GeneAnswers::getSymbols(regulonaml$tf, data = "org.Hs.eg"),
"target" = GeneAnswers::getSymbols(regulonaml$target, data = "org.Hs.eg"),
"mor" = regulonaml$mor,
"likelihood" = regulonaml$likelihood)
suppressPackageStartupMessages({
library(viper)
library(aracne.networks)
library(GeneAnswers)
library(org.Hs.eg.db)
})
suppressPackageStartupMessages({
library(viper)
library(aracne.networks)
library(GeneAnswers)
library(org.Hs.eg.db)
library(Rcy3)
library(igraph)
})
suppressPackageStartupMessages({
library(viper)
library(aracne.networks)
library(GeneAnswers)
library(org.Hs.eg.db)
library(RCy3)
library(igraph)
})
Bad_responder_aracne_igraph <- igraph::graph_from_data_frame(Bad_responder_aracne_network, vertices = unique(c(Baseline_aracne_network$source,Baseline_aracne_network$target)))
Bad_responder_aracne_igraph <- igraph::graph_from_data_frame(Bad_responder_aracne_network)
V(Bad_responder_aracne_igraph)$names
V(Bad_responder_aracne_igraph)
degree(Bad_responder_aracne_igraph)
Bad_responder_aracne_degree <- degree(Bad_responder_aracne_igraph)
Bad_responder_aracne_degree <- as.data.frame(degree(Bad_responder_aracne_igraph))
View(Bad_responder_aracne_degree)
Baseline_aracne_igraph <- igraph::graph_from_data_frame(Baseline_aracne_network)
Baseline_aracne_degree <- as.data.frame(degree(Baseline_aracne_igraph))
View(Baseline_aracne_degree)
>>>>>>> 4f3bc870a80e42b8c0a4e132a2ad18cbbf57f94e
